<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Review">

    <!-- 리뷰 삽입 -->
    <insert id="insertReview" parameterType="com.mart.boot.review.model.ReviewVO">
        INSERT INTO REVIEW (REVIEW_ID, WRITER_ID, USER_ID, RE_TITLE, RE_CONTENT, REVIEW_DATE, P_NAME)
        VALUES (REVIEW_SEQ.NEXTVAL, #{writerId}, #{userId}, #{reTitle}, #{reContent}, SYSDATE, #{pName})
        <selectKey keyProperty="reviewId" resultType="long" order="AFTER">
            SELECT REVIEW_SEQ.CURRVAL FROM DUAL
        </selectKey>
    </insert>

    <!-- 모든 리뷰 선택 -->
    <select id="selectAllReviews" resultType="com.mart.boot.review.model.ReviewVO">
        SELECT * FROM REVIEW ORDER BY REVIEW_DATE DESC
    </select>

    <!-- 검색 조건에 맞는 리뷰 선택 -->
    <select id="selectReviews" parameterType="map" resultType="com.mart.boot.review.model.ReviewVO">
        SELECT * FROM REVIEW
        <where>
            <if test="searchType != null and searchType == 'productName'">
                AND P_NAME LIKE '%' || #{searchKeyword} || '%'
            </if>
            <if test="searchType != null and searchType == 'content'">
                AND RE_CONTENT LIKE '%' || #{searchKeyword} || '%'
            </if>
        </where>
        ORDER BY REVIEW_DATE DESC
    </select>

    <!-- 리뷰 업데이트 -->
    <update id="updateReview" parameterType="com.mart.boot.review.model.ReviewVO">
        UPDATE REVIEW
        SET RE_TITLE = #{reTitle},
            RE_CONTENT = #{reContent},
            RE_MODIFY = #{reModify},
            P_NAME = #{pName}
        WHERE REVIEW_ID = #{reviewId}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="long">
        DELETE FROM REVIEW WHERE REVIEW_ID = #{reviewId}
    </delete>

    <!-- 리뷰 ID로 리뷰 선택 -->
    <select id="selectReviewById" parameterType="long" resultType="com.mart.boot.review.model.ReviewVO">
        SELECT * FROM REVIEW WHERE REVIEW_ID = #{reviewId}
    </select>

    <!-- 검색 조건에 맞는 리뷰 개수 계산 -->
    <select id="countReviews" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM REVIEW
        <where>
            <if test="searchType != null and searchType == 'productName'">
                AND P_NAME LIKE '%' || #{searchKeyword} || '%'
            </if>
            <if test="searchType != null and searchType == 'content'">
                AND RE_CONTENT LIKE '%' || #{searchKeyword} || '%'
            </if>
        </where>
    </select>

    <!-- 파일 정보 삽입 -->
    <insert id="insertReviewFile" parameterType="map">
        INSERT INTO REVIEW_FILE (REVIEW_ID, FILE_NAME)
        VALUES (#{reviewId}, #{fileName})
    </insert>
</mapper>
